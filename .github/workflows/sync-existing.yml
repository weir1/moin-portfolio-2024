name: Sync Existing Issues

on:
  workflow_dispatch:  # This allows manual triggering

jobs:
  sync_existing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Sync Existing Issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: "3"  # Your project number
          VIEW_ID: "3"    # Your view number
        run: |
          # Get all issues
          issues=$(gh api -X GET /repos/${{ github.repository }}/issues \
            -F state=all \
            -F per_page=100)
          
          # For each issue
          echo "$issues" | jq -c '.[]' | while read -r issue; do
            issue_number=$(echo "$issue" | jq -r '.number')
            title=$(echo "$issue" | jq -r '.title')
            labels=$(echo "$issue" | jq -r '.labels[].name')
            
            # Add to project if not already added
            echo "Processing issue #$issue_number: $title"
            
            # Add to project using GraphQL
            gh api graphql -f query='
              mutation($project:ID!, $issue:ID!) {
                addProjectV2ItemById(input: {projectId: $project contentId: $issue}) {
                  item {
                    id
                  }
                }
              }' -f project="$PROJECT_ID" -f issue="$issue" || true
            
            # Set priority based on labels
            priority=""
            if echo "$labels" | grep -q "p0-critical"; then
              priority="P0 - Critical üö®"
            elif echo "$labels" | grep -q "high-priority"; then
              priority="P1 - High Priority üî•"
            elif echo "$labels" | grep -q "feature"; then
              priority="P2 - Important üìà"
            else
              priority="P3 - Normal ‚≠ê"
            fi
            
            # Update priority field using GraphQL
            if [ ! -z "$priority" ]; then
              gh api graphql -f query='
                mutation($project:ID!, $item:ID!, $value:String!) {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: $project
                      itemId: $item
                      fieldId: "Priority"
                      value: $value
                    }
                  ) {
                    projectV2Item {
                      id
                    }
                  }
                }' -f project="$PROJECT_ID" -f item="$issue" -f value="$priority" || true
            fi
            
            echo "Processed issue #$issue_number"
          done